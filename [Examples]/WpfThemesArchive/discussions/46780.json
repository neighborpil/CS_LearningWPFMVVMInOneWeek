[
  {
    "Id": "156417",
    "ThreadId": "46780",
    "Html": "A while ago I had the idea of using an animated transition when the user switches themes. I decided to try it out using the themes in this library, originally I was using an Image in an Adorner and animating the opacity mask, this worked ok. I then added support for the transition effects available at http://www.codeplex.com/wpffx this gave better results with much less code as these effects removed the need for adorners or any other elements.<br>\r\n<br>\r\nIf you want to try it out here are some instructions.<br>\r\n1. Download and compile the &quot;Windows Presentation Foundation Pixel Shader Effects Library&quot; from http://www.codeplex.com/wpffx<br>\r\n2. Reference TransitionEffects.dll in the WPF.Themes project.<br>\r\n3. You can then transition on theme switching with something along the lines of the code below.<br>\r\n4. Try out the demo project.<br>\r\n<br>\r\nCheck the requirements section of the Shader Effect Library as it has some dependencies. The example code just cycles through the different effects and doesn't change any shader specific settings, you'll probably want to alter it. <br>\r\n<br>\r\nIn <strong>ThemeManager.cs</strong> replace the exisiting ApplyTheme(ContentControl,) method.<br>\r\npublic static void ApplyTheme(this ContentControl control, string theme)<br>\r\n{<br>\r\n&nbsp;&nbsp;&nbsp; ResourceDictionary dictionary = ThemeManager.GetThemeResourceDictionary(theme);<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; if (dictionary != null)<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(control.Resources.MergedDictionaries.Count &gt; 0)<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Transition(control);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; control.Resources.MergedDictionaries.Clear();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; control.Resources.MergedDictionaries.Add(dictionary);<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n}<br>\r\nprivate static TransitionEffect[] effects;<br>\r\nprivate static int effectIndex = 0;<br>\r\nprivate static void Transition(ContentControl control)<br>\r\n{<br>\r\n&nbsp;&nbsp; &nbsp;var content = control.Content as FrameworkElement;<br>\r\n&nbsp;&nbsp; &nbsp;content = content ?? control;<br>\r\n<br>\r\n&nbsp;&nbsp; &nbsp;var image = new RenderTargetBitmap((int)content.ActualWidth, (int)content.ActualHeight, 96, 96, PixelFormats.Pbgra32);<br>\r\n&nbsp;&nbsp; &nbsp;image.Render(control);<br>\r\n<br>\r\n&nbsp;&nbsp; &nbsp;if (effects == null)<br>\r\n&nbsp;&nbsp; &nbsp;{<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;effects = (from e in typeof(TransitionEffect).Assembly.GetTypes()<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; where !e.IsAbstract<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; select (TransitionEffect)Activator.CreateInstance(e)).ToArray();<br>\r\n&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;var effect = effects[effectIndex];<br>\r\n&nbsp;&nbsp; &nbsp;effectIndex = (effectIndex + 1) % effects.Length;<br>\r\n&nbsp;&nbsp; &nbsp;effect.OldImage = new ImageBrush(image);<br>\r\n<br>\r\n&nbsp;&nbsp; &nbsp;control.Effect = effect;<br>\r\n&nbsp;&nbsp; &nbsp;<br>\r\n&nbsp;&nbsp; &nbsp;var anim = new DoubleAnimation(0, 1, TimeSpan.FromSeconds(2)) { AccelerationRatio = 0.5};<br>\r\n&nbsp;&nbsp; &nbsp;anim.Completed += (s, e) =&gt; control.Effect = null;<br>\r\n&nbsp;&nbsp; &nbsp;effect.BeginAnimation(TransitionEffect.ProgressProperty, anim);<br>\r\n}<br>\r\n",
    "PostedDate": "2009-02-10T13:38:31.097-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]